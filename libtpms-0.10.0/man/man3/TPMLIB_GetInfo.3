.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "TPMLIB_GetInfo 3"
.TH TPMLIB_GetInfo 3 "2024-11-14" "libtpms" ""
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
TPMLIB_GetInfo    \- Get Information about the TPM implementation
.SH "LIBRARY"
.IX Header "LIBRARY"
\&\s-1TPM\s0 library (libtpms, \-ltpms)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fB#include <libtpms/tpm_library.h\fR>
.PP
\&\fBchar *TPMLIB_GetInfo(TPMLIB_InfoFlags flags);\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fB\fBTPMLIB_GetInfo()\fB\fR function allows to query for \s-1TPM\s0 implementation
specifics and get a \s-1JSON\s0 string in return. Which data is to be returned
can be specified in the flags parameter that may be a logical 'or' concatenation
of flags. If passed flags are not supported, nothing is returned . If a 0 is
passed in, an empty \s-1JSON\s0 Object '{}' is returned.
.PP
The following flags are defined and return \s-1JSON\s0 objects as shown:
.IP "\fB\s-1TPMLIB_INFO_TPMSPECIFICATION\s0\fR" 4
.IX Item "TPMLIB_INFO_TPMSPECIFICATION"
{\*(L"TPMSpecification\*(R":{\*(L"family\*(R":\*(L"1.2\*(R",\*(L"level\*(R":2,\*(L"revision\*(R":116}}
.IP "\fB\s-1TPMLIB_INFO_TPMATTRIBUTES\s0\fR" 4
.IX Item "TPMLIB_INFO_TPMATTRIBUTES"
{\*(L"TPMAttributes\*(R":{\*(L"manufacturer\*(R":\*(L"id:00001014\*(R",\*(L"version\*(R":\*(L"id:00740001\*(R",\*(L"model\*(R":\*(L"swtpm\*(R"}}
.IP "\fB\s-1TPMLIB_INFO_TPMFEATURES\s0\fR (since v0.8.0)" 4
.IX Item "TPMLIB_INFO_TPMFEATURES (since v0.8.0)"
{\*(L"TPMFeatures\*(R":{\*(L"RSAKeySizes\*(R":[1024,2048,3072]}}
.Sp
This \s-1JSON\s0 object may be extended in the future.
.IP "\fB\s-1TPMLIB_INFO_RUNTIME_ALGORITHMS\s0\fR (since v0.10.0)" 4
.IX Item "TPMLIB_INFO_RUNTIME_ALGORITHMS (since v0.10.0)"
.Vb 10
\& {
\&   "RuntimeAlgorithms": {
\&     "Implemented": "rsa,rsa\-min\-size=1024,tdes,tdes\-min\-size=128,sha1,hmac," \e
\&                    "aes,aes\-min\-size=128,mgf1,keyedhash,xor,sha256,sha384," \e
\&                    "sha512,null,rsassa,rsaes,rsapss,oaep,ecdsa,ecdh,ecdaa," \e
\&                    "sm2,ecschnorr,ecmqv,kdf1\-sp800\-56a,kdf2,kdf1\-sp800\-108," \e
\&                    "ecc,ecc\-min\-size=192,ecc\-nist,ecc\-bn,ecc\-nist\-p192," \e
\&                    "ecc\-nist\-p224,ecc\-nist\-p256,ecc\-nist\-p384," \e
\&                    "ecc\-nist\-p521,"ecc\-bn\-p256,ecc\-bn\-p638,ecc\-sm2\-p256," \e
\&                    "symcipher,camellia,camellia\-min\-size=128,cmac,ctr,ofb," \e
\&                    "cbc,cfb,ecb",
\&     "CanBeDisabled": "tdes,sha1,sha512,rsassa,rsaes,rsapss,ecmqv,ecc\-nist," \e
\&                      "ecc\-bn,ecc\-nist\-p192,ecc\-nist\-p224,ecc\-nist\-p521," \e
\&                      "ecc\-bn\-p256,ecc\-bn\-p638,ecc\-sm2\-p256,camellia,cmac," \e
\&                      "ctr,ofb,cbc,ecb",
\&     "Enabled": "rsa,rsa\-min\-size=1024,hmac,aes,aes\-min\-size=128,mgf1," \e
\&                "keyedhash,xor,sha256,sha384,null,oaep,ecdsa,ecdh,ecdaa," \e
\&                "sm2,ecschnorr,kdf1\-sp800\-56a,kdf2,kdf1\-sp800\-108,ecc," \e
\&                "ecc\-min\-size=192,ecc\-bn,ecc\-nist\-p192,ecc\-nist\-p224," \e
\&                "ecc\-nist\-p256,ecc\-nist\-p384,ecc\-nist\-p521,ecc\-bn\-p256," \e
\&                "ecc\-bn\-p638,ecc\-sm2\-p256,symcipher,camellia," \e
\&                "camellia\-min\-size=128,cmac,ctr,ofb,cbc,cfb,ecb",
\&     "Disabled": "tdes,sha1,sha512,rsassa,rsaes,rsapss,ecmqv,ecc\-nist"
\&   }
\& }
.Ve
.Sp
This \s-1JSON\s0 object enumerates all \fIimplemented\fR algorithms as well as supported
elliptic curve cryptography (\s-1ECC\s0) curves. Those verbs enumerated under
\&\fICanBeDisabled\fR represent algorithms and \s-1ECC\s0 curves that a user may omit from
a profile, thus making them unavailable to applications. The verbs enumerated
under \fIEnabled\fR and \fIDisabled\fR represent algorithms that are enabled and
disabled in the currently active profile.
.Sp
The verbs \fIecc-nist\fR and \fIecc-bn\fR are shortcuts enabling all currently
implemented \s-1ECC NIST\s0 curves (ecc\-nist\-p192, ecc\-nist\-p256, ...) and \s-1BN\s0
(Baretto-Naehrig) curves (ecc\-bn\-p256, ecc\-bn\-p638). If omitted then the
individual curves can still be enumerated individually to enable them.
Since \fIecc\-nist\-p256\fR and \fIecc\-nist\-p384\fR cannot be disabled, they must
be enumerated if the \fIecc-nist\fR shortcut is not used.
.Sp
Minimum key sizes for rsa, ecc, tdes, aes, and camellia are also described.
.Sp
When new algorithms and \s-1ECC\s0 curves are added to the \s-1TPM\s0 in the future, then
this \s-1JSON\s0 object will return more algorithms.
.IP "\fB\s-1TPMLIB_INFO_RUNTIME_COMMANDS\s0\fR (since v0.10.0)" 4
.IX Item "TPMLIB_INFO_RUNTIME_COMMANDS (since v0.10.0)"
{
  \*(L"RuntimeCommands\*(R": {
    \*(L"Implemented\*(R": \*(L"0x11f\-0x122,0x124\-0x12e,0x130\-0x140,0x142\-0x159,\*(R" \e
                   \*(L"0x15b\-0x15e,0x160\-0x165,0x167\-0x174,0x176\-0x178,\*(R" \e
                   \*(L"0x17a\-0x193,0x197,0x199\-0x19a\*(R",
    \*(L"CanBeDisabled\*(R": \*(L"0x11f,0x121\-0x122,0x124\-0x128,0x12a\-0x12e,0x130,\*(R" \e
                     \*(L"0x132\-0x13b,0x13d\-0x140,0x142,0x146\-0x147,0x149\-0x14d,\*(R" \e
                     \*(L"0x14f\-0x152,0x154\-0x155,0x159,0x15b,0x15d\-0x15e,\*(R" \e
                     \*(L"0x160\-0x164,0x167\-0x168,0x16a\-0x172,0x174,0x177\-0x178,\*(R" \e
                     \*(L"0x17b,0x17f\-0x181,0x183\-0x184,0x187\-0x193,0x197,\*(R" \e
                     0x199\-0x19a\*(L",
    \*(R"Enabled\*(L": \*(R"0x11f\-0x122,0x124\-0x12e,0x130\-0x140,0x142\-0x159,0x15b\-0x15e,\*(L" \e
               \*(R"0x160\-0x165,0x167\-0x174,0x176\-0x178,0x17a\-0x193,0x197,\*(L" \e
               \*(R"0x199\-0x19a\*(L",
    \*(R"Disabled\*(L": \*(R""
  }
}
.Sp
This \s-1JSON\s0 object enumerates all \fIimplemented\fR commands by their hexadecimal
numbers and shows which ones can be disabled, which ones are currently
enabled and which ones are disabled.
.IP "\fB\s-1TPMLIB_INFO_ACTIVE_PROFILE\s0\fR (since v0.10.0)" 4
.IX Item "TPMLIB_INFO_ACTIVE_PROFILE (since v0.10.0)"
This \s-1JSON\s0 object shows the currently active profile.
.Sp
.Vb 10
\& {
\&   "ActiveProfile": {
\&     "Name": "null",
\&     "StateFormatLevel": 1,
\&     "Commands": "0x11f\-0x122,0x124\-0x12e,0x130\-0x140,0x142\-0x159," \e
\&                 "0x15b\-0x15e,0x160\-0x165,0x167\-0x174,0x176\-0x178," \e
\&                 "0x17a\-0x193,0x197",
\&     "Algorithms": "rsa,rsa\-min\-size=1024,tdes,tdes\-min\-size=128,sha1,hmac," \e
\&                   "aes,aes\-min\-size=128,mgf1,keyedhash,xor,sha256,sha384," \e
\&                   "sha512,null,rsassa,rsaes,rsapss,oaep,ecdsa,ecdh,ecdaa," \e
\&                   "sm2,ecschnorr,ecmqv,kdf1\-sp800\-56a,kdf2,kdf1\-sp800\-108," \e
\&                   "ecc,ecc\-min\-size=192,ecc\-nist,ecc\-bn,symcipher,camellia," \e
\&                   "camellia\-min\-size=128,cmac,ctr,ofb,cbc,cfb,ecb",
\&     "Description": "The profile enables the commands and algorithms that " \e
\&                    "were enabled in libtpms v0.9. This profile is " \e
\&                    "automatically used when the state does not have a " \e
\&                    "profile, for example when it was created by " \e
\&                    "libtpms v0.9 or before."
\&   }
\& }
.Ve
.Sp
The above profile is the 'null' profile. If the null profile is used then
the state will again be readable by libtpms v0.9.
.IP "\fB\s-1TPMLIB_INFO_AVAILABLE_PROFILES\s0\fR (since v0.10.0)" 4
.IX Item "TPMLIB_INFO_AVAILABLE_PROFILES (since v0.10.0)"
This \s-1JSON\s0 object enumerates available profiles.
.Sp
.Vb 10
\& {
\&   "AvailableProfiles": [
\&     {
\&       "Name": "default\-v1",
\&       "StateFormatLevel": 4,
\&       "Commands": "0x11f\-0x122,0x124\-0x12e,0x130\-0x140,0x142\-0x159,...",
\&       "Algorithms": "rsa,rsa\-min\-size=1024,tdes,tdes\-min\-size=128,...",
\&       "Description": "This profile enables all currently supported ...",
\&     },
\&     {
\&       "Name": "null",
\&       "StateFormatLevel": 1,
\&       "Commands": "0x11f\-0x122,0x124\-0x12e,0x130\-0x140,0x142\-0x159,...",
\&       "Algorithms": "rsa,rsa\-min\-size=1024,tdes,tdes\-min\-size=128,...",
\&       "Description": "The profile enables the commands and algorithms ...",
\&     },
\&     ....
\&   ]
\& }
.Ve
.Sp
Future versions of libtpms may enumerate other profiles.
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
This function returns a \s-1JSON\s0 string on success and a \s-1NULL\s0 pointer if a memory
allocation failure occurred.
.PP
The caller must \fBfree()\fR the returned string.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
